public void train(String spamDir, String hamDir) throws IOException{

     //  System.err.println("Building vocabulary....");
       vocabulary = extractVocabulary(spamDir, hamDir);
       System.err.println("Vocabulary built");


       System.err.println("Initializing weight vector....");
       weightVector = new Double[vocabulary.length + 1];

       //Initialie weight vector
       weightVector[0] = 0.0;
       for (int i = 0; i < vocabulary.length; i++) {
           weightVector[i + 1] = 0.0;
       }
       System.err.println("Weight vector initialized ...");

       System.err.println("Building frequency vector for each training example ...");
       for (File spamFile : FileUtil.openFiles(spamDir)) {
           addOneSpamExample(spamFile);
       }

       for (File hamFile : FileUtil.openFiles(hamDir)) {
           addOneHamExample(hamFile);
       }
       System.err.println("Frequency vector created");


       for (int t = 0; t < 2000; t++) {

           double change = 0;

           for (TrainingExample example : trainingExamples) {
               //Compute pHat
               double pHat = 0;

               double sumWiXi = weightVector[0];

               for (int i = 0; i < vocabulary.length; i++) {
                   sumWiXi += example.getWordFrequency(i) * weightVector[i + 1];
               }

               sumWiXi = -1*sumWiXi;

               pHat = 1 / (1 + Math.exp(sumWiXi));

               example.setpHat(pHat);
           }

           //Update weight vector
           for (int i = 0; i < vocabulary.length; i++) {

               double innerSumJ = 0;

               for (TrainingExample example : trainingExamples) {
                   innerSumJ += example.getWordFrequency(i) * (example.getY() - example.getpHat());
               }

               double wi = weightVector[i + 1] + ita * ( -lambda * weightVector[i + 1] + innerSumJ);
               change += Math.abs(weightVector[i + 1] - wi);
               weightVector[i + 1] = wi;

           }

           //update w0
           double innerSumJ = 0;

           for (TrainingExample example : trainingExamples) {
               innerSumJ += (example.getY() - example.getpHat());
           }

           weightVector[0] += ita * ( -lambda * weightVector[0] + innerSumJ);

           if(t > 180){
//                ita -= 0.000005;
           }

           System.out.println(change);

       }


   }
